version: '3'
services:
  postgres:
    image: 'postgres:latest'
    restart: always
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    container_name: postgres-goi
    environment:
      POSTGRES_DB: java-spring-starter
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
    ports:
      - '5432:5432'
  zookeeper-goi:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka-goi:
    container_name: kafka-goi
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-goi
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-goi:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-goi:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

    volumes:
      - ./var/run/docker.sock
  kafka-setup-goi:
    container_name: kafka-setup-goi
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-goi
      - kafka-goi
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
              cub kafka-ready -b kafka-goi:29092 1 30 && \
              kafka-topics --create --if-not-exists --zookeeper zookeeper-goi:2181 --partitions 1 --replication-factor 1 --topic goi-kafka-topic'"

volumes:
  postgres-data:
